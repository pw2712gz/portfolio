/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
    :root, :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
        "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
        "Courier New", monospace;
        --color-green-400: oklch(79.2% 0.209 151.711);
        --color-green-500: oklch(72.3% 0.219 149.579);
        --color-blue-400: oklch(70.7% 0.165 254.624);
        --color-purple-400: oklch(71.4% 0.203 305.504);
        --color-gray-100: oklch(96.7% 0.003 264.542);
        --color-gray-200: oklch(92.8% 0.006 264.531);
        --color-gray-300: oklch(87.2% 0.01 258.338);
        --color-gray-400: oklch(70.7% 0.022 261.325);
        --color-gray-500: oklch(55.1% 0.027 264.364);
        --color-gray-600: oklch(44.6% 0.03 256.802);
        --color-gray-700: oklch(37.3% 0.034 259.733);
        --color-gray-800: oklch(27.8% 0.033 256.848);
        --color-gray-900: oklch(21% 0.034 264.665);
        --spacing: 0.25rem;
        --container-4xl: 56rem;
        --text-xs: 0.75rem;
        --text-xs--line-height: calc(1 / 0.75);
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75 / 1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --radius-sm: 0.25rem;
        --default-transition-duration: 150ms;
        --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
    }
}
@layer base {
    *, ::after, ::before, ::backdrop, ::file-selector-button {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0 solid;
    }

    html, :host {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }

    h1, h2, h3, h4, h5, h6 {
        font-size: inherit;
        font-weight: inherit;
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }

    b, strong {
        font-weight: bolder;
    }

    code, kbd, samp, pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    sub, sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }

    sub {
        bottom: -0.25em;
    }

    sup {
        top: -0.5em;
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }

    :-moz-focusring {
        outline: auto;
    }

    progress {
        vertical-align: baseline;
    }

    summary {
        display: list-item;
    }

    ol, ul, menu {
        list-style: none;
    }

    img, svg, video, canvas, audio, iframe, embed, object {
        display: block;
        vertical-align: middle;
    }

    img, video {
        max-width: 100%;
        height: auto;
    }

    button, input, select, optgroup, textarea, ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        border-radius: 0;
        background-color: transparent;
        opacity: 1;
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }

    ::file-selector-button {
        margin-inline-end: 4px;
    }

    ::placeholder {
        opacity: 1;
    }

    @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentcolor;
            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }
    textarea {
        resize: vertical;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        display: inline-flex;
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }

    ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }

    :-moz-ui-invalid {
        box-shadow: none;
    }

    button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
        appearance: button;
    }

    ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
        height: auto;
    }

    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }
}
@layer utilities {
    .mx-auto {
        margin-inline: auto;
    }

    .mr-1\.5 {
        margin-right: calc(var(--spacing) * 1.5);
    }

    .mb-1\.5 {
        margin-bottom: calc(var(--spacing) * 1.5);
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }

    .mb-3 {
        margin-bottom: calc(var(--spacing) * 3);
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }

    .mb-8 {
        margin-bottom: calc(var(--spacing) * 8);
    }

    .flex {
        display: flex;
    }

    .grid {
        display: grid;
    }

    .inline-block {
        display: inline-block;
    }

    .h-4 {
        height: calc(var(--spacing) * 4);
    }

    .h-full {
        height: 100%;
    }

    .w-4 {
        width: calc(var(--spacing) * 4);
    }

    .w-full {
        width: 100%;
    }

    .max-w-4xl {
        max-width: var(--container-4xl);
    }

    .grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    .flex-col {
        flex-direction: column;
    }

    .flex-wrap {
        flex-wrap: wrap;
    }

    .items-center {
        align-items: center;
    }

    .items-start {
        align-items: flex-start;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-center {
        justify-content: center;
    }

    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }

    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }

    .space-x-3 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
        }
    }

    .rounded-sm {
        border-radius: var(--radius-sm);
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .border-b-2 {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 2px;
    }

    .border-gray-600 {
        border-color: var(--color-gray-600);
    }

    .border-gray-600\/50 {
        border-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-gray-600) 50%, transparent);
        }
    }

    .border-gray-600\/75 {
        border-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 75%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-gray-600) 75%, transparent);
        }
    }

    .border-gray-700 {
        border-color: var(--color-gray-700);
    }

    .border-green-500 {
        border-color: var(--color-green-500);
    }

    .bg-gray-800 {
        background-color: var(--color-gray-800);
    }

    .bg-gray-900 {
        background-color: var(--color-gray-900);
    }

    .p-4 {
        padding: calc(var(--spacing) * 4);
    }

    .p-6 {
        padding: calc(var(--spacing) * 6);
    }

    .px-2 {
        padding-inline: calc(var(--spacing) * 2);
    }

    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }

    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }

    .py-1\.5 {
        padding-block: calc(var(--spacing) * 1.5);
    }

    .pt-4 {
        padding-top: calc(var(--spacing) * 4);
    }

    .pb-1 {
        padding-bottom: calc(var(--spacing) * 1);
    }

    .pb-2 {
        padding-bottom: calc(var(--spacing) * 2);
    }

    .pb-4 {
        padding-bottom: calc(var(--spacing) * 4);
    }

    .text-center {
        text-align: center;
    }

    .font-mono {
        font-family: var(--font-mono);
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }

    .text-blue-400 {
        color: var(--color-blue-400);
    }

    .text-blue-400\/90 {
        color: color-mix(in srgb, oklch(70.7% 0.165 254.624) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-blue-400) 90%, transparent);
        }
    }

    .text-gray-100 {
        color: var(--color-gray-100);
    }

    .text-gray-200 {
        color: var(--color-gray-200);
    }

    .text-gray-300 {
        color: var(--color-gray-300);
    }

    .text-gray-400 {
        color: var(--color-gray-400);
    }

    .text-gray-500 {
        color: var(--color-gray-500);
    }

    .text-green-400 {
        color: var(--color-green-400);
    }

    .text-green-400\/90 {
        color: color-mix(in srgb, oklch(79.2% 0.209 151.711) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-green-400) 90%, transparent);
        }
    }

    .text-green-500 {
        color: var(--color-green-500);
    }

    .text-purple-400 {
        color: var(--color-purple-400);
    }

    .text-purple-400\/90 {
        color: color-mix(in srgb, oklch(71.4% 0.203 305.504) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-purple-400) 90%, transparent);
        }
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-colors {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .duration-200 {
        --tw-duration: 200ms;
        transition-duration: 200ms;
    }

    .hover\:border-gray-400 {
        &:hover {
            @media (hover: hover) {
                border-color: var(--color-gray-400);
            }
        }
    }

    .hover\:bg-green-500\/10 {
        &:hover {
            @media (hover: hover) {
                background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 10%, transparent);
                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-green-500) 10%, transparent);
                }
            }
        }
    }

    .hover\:text-gray-100 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-gray-100);
            }
        }
    }

    .sm\:w-auto {
        @media (width >= 40rem) {
            width: auto;
        }
    }

    .sm\:grid-cols-2 {
        @media (width >= 40rem) {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    .sm\:flex-row {
        @media (width >= 40rem) {
            flex-direction: row;
        }
    }

    .sm\:items-center {
        @media (width >= 40rem) {
            align-items: center;
        }
    }

    .sm\:gap-0 {
        @media (width >= 40rem) {
            gap: calc(var(--spacing) * 0);
        }
    }

    .sm\:gap-6 {
        @media (width >= 40rem) {
            gap: calc(var(--spacing) * 6);
        }
    }

    .md\:grid-cols-2 {
        @media (width >= 48rem) {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    .md\:p-10 {
        @media (width >= 48rem) {
            padding: calc(var(--spacing) * 10);
        }
    }

    .lg\:grid-cols-4 {
        @media (width >= 64rem) {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }
}

body {
    font-family: "Courier New", monospace;
}

.animate-ready .animate-fade-in {
    opacity: 0;
    transform: translateY(10px);
    animation: fadeIn 0.6s ease-out forwards;
}

@keyframes fadeIn {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false;
}

@property --tw-duration {
    syntax: "*";
    inherits: false;
}

@layer properties {
    @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
        *, ::before, ::after, ::backdrop {
            --tw-space-x-reverse: 0;
            --tw-border-style: solid;
            --tw-font-weight: initial;
            --tw-duration: initial;
        }
    }
}
